//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModuleInject {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Errors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Errors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ModuleInject.Errors", typeof(Errors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method &apos;{0}&apos; of module with type &apos;{1}&apos; is not registered as a factory method. Could not create instance of requested type..
        /// </summary>
        internal static string InjectionModule_FactoryMethodNotRegistered {
            get {
                return ResourceManager.GetString("InjectionModule_FactoryMethodNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method &apos;{0}&apos; of module with type &apos;{1}&apos; can not be registered as a factory method. Only parameterless methods can currently be registered..
        /// </summary>
        internal static string InjectionModule_FactoryMethodsWithParametersNotSupportedYet {
            get {
                return ResourceManager.GetString("InjectionModule_FactoryMethodsWithParametersNotSupportedYet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The modul with type &apos;{0}&apos; does not possess an interface. Please provide one in the generic parameters of InjectionModule and implement it in your module..
        /// </summary>
        internal static string InjectionModule_ModulesMustHaveAnInterface {
            get {
                return ResourceManager.GetString("InjectionModule_ModulesMustHaveAnInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; of module with type &apos;{1}&apos; could not be resolved. Did you inject a property that was neither a member of the modules interface nor marked with the PrivateComponentAttribute?.
        /// </summary>
        internal static string ModuleResolver_MissingPropertyRegistration {
            get {
                return ResourceManager.GetString("ModuleResolver_MissingPropertyRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; of module with type &apos;{1}&apos; has no interface. Please make sure that all properties of your modules are implemented with interface types..
        /// </summary>
        internal static string ModuleResolver_PropertyIsNoInterface {
            get {
                return ResourceManager.GetString("ModuleResolver_PropertyIsNoInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; of module with type &apos;{1}&apos; is not qualified to be a private component. Either it is a public component or it was not marked with the PrivateComponentAttribute..
        /// </summary>
        internal static string ModuleResolver_PropertyNotQualifiedForPrivateRegistration {
            get {
                return ResourceManager.GetString("ModuleResolver_PropertyNotQualifiedForPrivateRegistration", resourceCulture);
            }
        }
    }
}
