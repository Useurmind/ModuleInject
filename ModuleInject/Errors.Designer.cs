//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.0
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModuleInject {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Errors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Errors() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ModuleInject.Errors", typeof(Errors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interception was not activated on the module with type &apos;{0}&apos;. Activate interception in the module before adding a behaviour to components. ähnelt.
        /// </summary>
        internal static string ComponentRegistrationContext_InterceptionNotActivated {
            get {
                return ResourceManager.GetString("ComponentRegistrationContext_InterceptionNotActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The component of name &apos;{0}&apos; and type &apos;{1}&apos; in module &apos;{2}&apos; has no dispose strategy defined despite it being derived from IDisposable. ähnelt.
        /// </summary>
        internal static string Construction_NoDisposeStrategySetForDisposableType {
            get {
                return ResourceManager.GetString("Construction_NoDisposeStrategySetForDisposableType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property &apos;{0}&apos; of type &apos;{1}&apos; has no setter defined. ähnelt.
        /// </summary>
        internal static string DependencyInjectionContext_IntoPropertyExpressionNotWritable {
            get {
                return ResourceManager.GetString("DependencyInjectionContext_IntoPropertyExpressionNotWritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The target given to the IntoProperty method does not describe a property. ähnelt.
        /// </summary>
        internal static string DependencyInjectionContext_NoMemberAccessInTargetExpression {
            get {
                return ResourceManager.GetString("DependencyInjectionContext_NoMemberAccessInTargetExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The module with type &apos;{0}&apos; was already resolved. Please avoid multiple resolutions of the same module. ähnelt.
        /// </summary>
        internal static string InjectionModule_AlreadyResolved {
            get {
                return ResourceManager.GetString("InjectionModule_AlreadyResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property or method &apos;{0}&apos; of module with type &apos;{1}&apos; could not be registered. Only direct properties and methods of a module can be registered. ähnelt.
        /// </summary>
        internal static string InjectionModule_CannotRegisterPropertyOrMethodsWhichAreNotMembersOfTheModule {
            get {
                return ResourceManager.GetString("InjectionModule_CannotRegisterPropertyOrMethodsWhichAreNotMembersOfTheModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The component &apos;{0}&apos; of module with type &apos;{1}&apos; is not registered. Could not create instance of requested component. ähnelt.
        /// </summary>
        internal static string InjectionModule_ComponentNotRegistered {
            get {
                return ResourceManager.GetString("InjectionModule_ComponentNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The component &apos;{0}&apos; of module with type &apos;{1}&apos; was tried to be resolved before the module was resolved. Please resolve the module before creating any instances. ähnelt.
        /// </summary>
        internal static string InjectionModule_CreateInstanceBeforeResolve {
            get {
                return ResourceManager.GetString("InjectionModule_CreateInstanceBeforeResolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The method &apos;{0}&apos; of module with type &apos;{1}&apos; can not be registered as a factory method. Only parameterless methods can currently be registered. ähnelt.
        /// </summary>
        internal static string InjectionModule_FactoryMethodsWithParametersNotSupportedYet {
            get {
                return ResourceManager.GetString("InjectionModule_FactoryMethodsWithParametersNotSupportedYet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The module with type &apos;{0}&apos; has invalid properties that are neither private nor public properties. Declare them as public via the module interface or apply the PrivateComponent attribute. 
        ///The properties are: &apos;{1}&apos; ähnelt.
        /// </summary>
        internal static string InjectionModule_InvalidProperty {
            get {
                return ResourceManager.GetString("InjectionModule_InvalidProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The method &apos;{0}&apos; of module with type &apos;{1}&apos; is not qualified to be a private factory. Either it is a public factory or it was not marked with the PrivateFactoryAttribute. ähnelt.
        /// </summary>
        internal static string InjectionModule_MethodNotQualifiedForPrivateRegistration {
            get {
                return ResourceManager.GetString("InjectionModule_MethodNotQualifiedForPrivateRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The module with type &apos;{0}&apos; does not possess an interface. Please provide one in the generic parameters of InjectionModule and implement it in your module. ähnelt.
        /// </summary>
        internal static string InjectionModule_ModulesMustHaveAnInterface {
            get {
                return ResourceManager.GetString("InjectionModule_ModulesMustHaveAnInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The expression &apos;{1}&apos; describes neither a property or method of the module with type &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string InjectionModule_NeitherPropertyNorMethodExpression {
            get {
                return ResourceManager.GetString("InjectionModule_NeitherPropertyNorMethodExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property &apos;{0}&apos; of module with type &apos;{1}&apos; is not qualified to be a private component. Either it is a public component or it was not marked with the PrivateComponentAttribute. ähnelt.
        /// </summary>
        internal static string InjectionModule_PropertyNotQualifiedForPrivateRegistration {
            get {
                return ResourceManager.GetString("InjectionModule_PropertyNotQualifiedForPrivateRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The types &apos;{0}&apos;, &apos;{1}&apos; of the injection register do not match the given types &apos;{2}&apos;, &apos;{3}&apos;. ähnelt.
        /// </summary>
        internal static string InjectionRegister_TypeMismatch {
            get {
                return ResourceManager.GetString("InjectionRegister_TypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The expression &apos;{0}&apos; is not a continuous chain of member accesses. ähnelt.
        /// </summary>
        internal static string MemberChainEvaluator_MemberChainNotContinuous {
            get {
                return ResourceManager.GetString("MemberChainEvaluator_MemberChainNotContinuous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The expression &apos;{0}&apos; has not the correct root type. ähnelt.
        /// </summary>
        internal static string MemberChainEvaluator_RootTypeMismatch {
            get {
                return ResourceManager.GetString("MemberChainEvaluator_RootTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The expression &apos;{0}&apos; is currently not supported as a method call argument. ähnelt.
        /// </summary>
        internal static string MethodCallArgumentNotSupported {
            get {
                return ResourceManager.GetString("MethodCallArgumentNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The registration hook of type &apos;{1}&apos; can not be added to the module of type &apos;{0}&apos; because it does not apply to it. ähnelt.
        /// </summary>
        internal static string Module_RegistrationHookDoesNotApply {
            get {
                return ResourceManager.GetString("Module_RegistrationHookDoesNotApply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property &apos;{0}&apos; of module with type &apos;{1}&apos; could not be resolved. Neither the module nor the registry of the module contained the component. Did you inject a property that was neither a member of the modules interface nor marked with the PrivateComponentAttribute? Did you forget to put the component into the registry or setting the registry of the module? ähnelt.
        /// </summary>
        internal static string ModuleResolver_MissingPropertyRegistration {
            get {
                return ResourceManager.GetString("ModuleResolver_MissingPropertyRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property &apos;{0}&apos; of module with type &apos;{1}&apos; has no interface. Please make sure that all properties of your modules are implemented with interface types. ähnelt.
        /// </summary>
        internal static string ModuleResolver_PropertyIsNoInterface {
            get {
                return ResourceManager.GetString("ModuleResolver_PropertyIsNoInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property &apos;{0}&apos; of module with type &apos;{1}&apos; is already set before resolving it despite not being marked with ExternalComponentAttribute. Please set the ExternalComponentAttribute if the property is set outside the resolution process of the module itself. ähnelt.
        /// </summary>
        internal static string ModuleResolver_PropertyWithoutExternalAttribute {
            get {
                return ResourceManager.GetString("ModuleResolver_PropertyWithoutExternalAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The constructor of component &apos;{0}&apos; in module of type &apos;{1}&apos; was already injected before. ähnelt.
        /// </summary>
        internal static string RegistrationContext_ConstructorAlreadyCalled {
            get {
                return ResourceManager.GetString("RegistrationContext_ConstructorAlreadyCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The registry is already composed, you can not add further catalogs to it. ähnelt.
        /// </summary>
        internal static string Registry_AlreadyComposedNoFurtherCatalogs {
            get {
                return ResourceManager.GetString("Registry_AlreadyComposedNoFurtherCatalogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The registry does not contain a registration for the type &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string RegistryModule_TypeNotRegistered {
            get {
                return ResourceManager.GetString("RegistryModule_TypeNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The instance with key &apos;{0}&apos; of type &apos;{1}&apos; could no be found by the service locator. ähnelt.
        /// </summary>
        internal static string ServiceLocator_CouldNotFindInstanceRegistration {
            get {
                return ResourceManager.GetString("ServiceLocator_CouldNotFindInstanceRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are multiple registrations of type &apos;{1}&apos; in the service locator. ähnelt.
        /// </summary>
        internal static string ServiceLocator_MultipleRegistrationsFound {
            get {
                return ResourceManager.GetString("ServiceLocator_MultipleRegistrationsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The property &apos;{0}&apos; of type  &apos;{1}&apos; does not have a setter anywhere in the module inheritance chain. ähnelt.
        /// </summary>
        internal static string TypeExtensions_NoPropertySetterFound {
            get {
                return ResourceManager.GetString("TypeExtensions_NoPropertySetterFound", resourceCulture);
            }
        }
    }
}
